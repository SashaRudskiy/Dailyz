// --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
let categories = {
    "–õ–∏—á–Ω–æ–µ": []
};
let selectedCategory = "–õ–∏—á–Ω–æ–µ";
let theme = "light";

// --- –≠–ª–µ–º–µ–Ω—Ç—ã DOM ---
const noteInput = document.getElementById('note-input');
const addNoteBtn = document.getElementById('add-note-btn');
const noteList = document.getElementById('note-list');
const categorySelect = document.getElementById('category-select');
const addCategoryBtn = document.getElementById('add-category-btn');
const newCategoryInput = document.getElementById('new-category-input');
const toggleThemeBtn = document.getElementById('toggle-theme-btn');

// --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
function saveData() {
    localStorage.setItem('noteAppData', JSON.stringify({
        categories, selectedCategory, theme
    }));
}

function loadData() {
    const d = JSON.parse(localStorage.getItem('noteAppData') || 'null');
    if(d) {
        categories = d.categories;
        selectedCategory = d.selectedCategory;
        theme = d.theme || 'light';
    }
}
loadData();

// --- –†–∞–±–æ—Ç–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ ---
function render() {
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    categorySelect.innerHTML = "";
    for (const cat in categories) {
        let opt = document.createElement('option');
        opt.value = cat;
        opt.textContent = cat;
        if(cat === selectedCategory) opt.selected = true;
        categorySelect.appendChild(opt);
    }

    // –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫
    noteList.innerHTML = "";
    (categories[selectedCategory] || []).forEach((note, idx) => {
        let li = document.createElement('li');
        li.textContent = note;
        let delBtn = document.createElement('button');
        delBtn.textContent = "–£–¥–∞–ª–∏—Ç—å";
        delBtn.onclick = () => {
            categories[selectedCategory].splice(idx, 1);
            saveData();
            render();
        };
        li.appendChild(delBtn);
        noteList.appendChild(li);
    });

    // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
    noteInput.value = "";
    newCategoryInput.value = "";
    applyTheme();
}

// --- –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É ---
addNoteBtn.onclick = () => {
    const note = noteInput.value.trim();
    if(note) {
        categories[selectedCategory].push(note);
        saveData();
        render();
    }
};

// --- –°–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ---
categorySelect.onchange = () => {
    selectedCategory = categorySelect.value;
    saveData();
    render();
};

// --- –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ---
addCategoryBtn.onclick = () => {
    const newCat = newCategoryInput.value.trim();
    if(newCat && !(newCat in categories)) {
        categories[newCat] = [];
        selectedCategory = newCat;
        saveData();
        render();
    }
};

// --- –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ ---
toggleThemeBtn.onclick = () => {
    theme = theme === 'light' ? 'dark' : 'light';
    saveData();
    render();
};

function applyTheme() {
    if(theme === 'dark') {
        document.body.classList.add('dark');
    } else {
        document.body.classList.remove('dark');
    }
    if(toggleThemeBtn)
        toggleThemeBtn.textContent = theme === 'dark' ? "‚òÄÔ∏è" : "üåô";
}

// –ü–µ—Ä–≤–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
render();
